[{"data":1,"prerenderedAt":22},["ShallowReactive",2],{"demo-yaml":3},{"id":4,"title":5,"author":6,"body":7,"description":8,"extension":9,"items":10,"meta":11,"metadata":10,"navigation":12,"path":13,"publishedAt":14,"seo":15,"stem":16,"tags":17,"__hash__":21},"content/demo-yaml.yml","YAMLでのコンポーネント呼び出しデモ","Demo Author","# YAMLでのコンポーネント呼び出しデモ\n\nYAMLファイルの`body`フィールドにMarkdownとMDC構文を記述できます。\n\n## YAMLの利点\n\n::alert{type=\"info\"}\nYAMLはメタデータとコンテンツを分けて管理できるのが特徴です。\n::\n\n### メタデータ部分\n\nこのページのメタデータ：\n- タイトル: YAMLでのコンポーネント呼び出しデモ\n- 著者: Demo Author\n- 公開日: 2025-01-18\n- タグ: yaml, components, demo\n\n### コンテンツ部分\n\n::card{title=\"YAMLの特徴\" icon=\"📋\" color=\"blue\"}\n- 読みやすい構造\n- メタデータとコンテンツの分離\n- MDC構文がそのまま使える\n::\n\n## 実際のコンポーネント呼び出し\n\n::feature-card{title=\"データ管理\" icon=\"💾\" color=\"purple\"}\nYAMLはデータ管理に適しています。\n構造化されたメタデータと、リッチなコンテンツを同時に扱えます。\n::\n\n::feature-card{title=\"保守性\" icon=\"🔧\" color=\"green\"}\nメタデータとコンテンツが分離されているため、\n管理がしやすく、変更も簡単です。\n::\n\n## 複数のコンポーネント\n\n::alert{type=\"warning\"}\nYAMLの`body`フィールドは文字列なので、インデントに注意が必要です。\n::\n\n::card{title=\"ベストプラクティス\" icon=\"⭐\" color=\"red\"}\nYAMLを使う場合：\n\n1. メタデータは通常のYAML形式\n2. コンテンツは`body`フィールドにMarkdown\n3. MDC構文でコンポーネント呼び出し\n\nこの組み合わせが最も使いやすいです。\n::\n\n## まとめ\n\n::alert{type=\"success\"}\n✅ YAMLファイルからもコンポーネントが正常に呼び出せました！\n::\n","YAMLのbodyフィールドでMDC構文を使った実例","yml",null,{},true,"/demo-yaml","2025-01-18",{"title":5,"description":8},"demo-yaml",[18,19,20],"yaml","components","demo","-HHqCIIkXypKUSpN8UQDmIN76N8Fl7g6F0Q0o4f_O4I",1760868428029]