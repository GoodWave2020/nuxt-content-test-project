import{_ as v}from"./BycnwW6Y.js";import{a as r}from"./DG20Dkve.js";import{B as c,f as b,j as a,G as l,i as d,w as o,A as s,t as i,g as u,_ as p}from"#entry";const m={class:"container"},f={class:"demo-grid"},g={class:"definition-section"},q={class:"definition-card"},w=c({__name:"index",setup(C){return r({title:"コンポーネントデモ一覧",description:"Nuxt Contentでコンポーネントを呼び出すデモページ"}),(n,e)=>{const t=v;return u(),b("div",m,[e[8]||(e[8]=a("h1",null,"コンポーネント呼び出しデモ",-1)),e[9]||(e[9]=a("p",{class:"subtitle"},"Markdown、YAML、JSONからコンポーネントを呼び出す実例",-1)),a("div",f,[d(t,{to:"/demos/markdown",class:"demo-card"},{default:o(()=>[...e[0]||(e[0]=[a("div",{class:"demo-icon"},"📝",-1),a("h2",null,"Markdown デモ",-1),a("p",null,"MDC構文を使ったコンポーネント呼び出し",-1),a("span",{class:"badge"},"推奨",-1)])]),_:1}),d(t,{to:"/demos/yaml",class:"demo-card"},{default:o(()=>[...e[1]||(e[1]=[a("div",{class:"demo-icon"},"📋",-1),a("h2",null,"YAML デモ",-1),a("p",null,"YAMLのbodyフィールドでMDC構文を使用",-1),a("span",{class:"badge badge-blue"},"データ + コンテンツ",-1)])]),_:1}),d(t,{to:"/demos/json",class:"demo-card"},{default:o(()=>[...e[2]||(e[2]=[a("div",{class:"demo-icon"},"🔤",-1),a("h2",null,"JSON デモ",-1),a("p",null,"JSONのbodyフィールドでMDC構文を使用",-1),a("span",{class:"badge badge-purple"},"プログラム生成",-1)])]),_:1})]),e[10]||(e[10]=l('<div class="info-section" data-v-e1b46999><h2 data-v-e1b46999>利用可能なコンポーネント</h2><div class="component-list" data-v-e1b46999><div class="component-item" data-v-e1b46999><h3 data-v-e1b46999>Alert</h3><p data-v-e1b46999>情報、警告、エラー、成功メッセージの表示</p><code data-v-e1b46999>::alert{type=&quot;info&quot;}</code></div><div class="component-item" data-v-e1b46999><h3 data-v-e1b46999>Card</h3><p data-v-e1b46999>カード形式のコンテナ、カラーバリエーション付き</p><code data-v-e1b46999>::card{title=&quot;タイトル&quot; icon=&quot;📝&quot; color=&quot;blue&quot;}</code></div><div class="component-item" data-v-e1b46999><h3 data-v-e1b46999>FeatureCard</h3><p data-v-e1b46999>機能を紹介するためのカード</p><code data-v-e1b46999>::feature-card{title=&quot;機能&quot; icon=&quot;🚀&quot; color=&quot;purple&quot;}</code></div></div></div>',1)),a("div",g,[e[5]||(e[5]=a("h2",null,"コンポーネントの定義方法",-1)),e[6]||(e[6]=a("div",{class:"definition-card"},[a("h3",null,"1️⃣ Vueコンポーネントファイルの配置"),a("p",null,[s("コンポーネントは "),a("code",null,"components/content/"),s(" ディレクトリに配置します。")]),a("pre",null,[a("code",null,`components/
└── content/
    ├── Alert.vue
    ├── Card.vue
    └── FeatureCard.vue`)])],-1)),a("div",q,[e[3]||(e[3]=a("h3",null,"2️⃣ コンポーネントの定義例",-1)),e[4]||(e[4]=a("p",null,[s("例: "),a("code",null,"components/content/Card.vue")],-1)),a("pre",null,[a("code",null,`<script setup lang="ts">
defineProps<{
  title?: string
  icon?: string
  color?: 'blue' | 'purple' | 'green' | 'red'
}>()
<\/script>

<template>
  <div :class="['card', color]">
    <div class="icon">`+i(n.icon)+`</div>
    <h3>`+i(n.title)+`</h3>
    <slot />
  </div>
</template>`,1)])]),e[7]||(e[7]=l(`<div class="definition-card" data-v-e1b46999><h3 data-v-e1b46999>3️⃣ MDC構文での呼び出し</h3><p data-v-e1b46999>ファイル名がMDC構文にマッピングされます（PascalCase → kebab-case）</p><pre data-v-e1b46999><code data-v-e1b46999>::card{title=&quot;タイトル&quot; icon=&quot;🔵&quot; color=&quot;blue&quot;}
カードのコンテンツ（slotに渡される）
::</code></pre></div><div class="definition-card" data-v-e1b46999><h3 data-v-e1b46999>4️⃣ 名前のマッピング規則</h3><ul data-v-e1b46999><li data-v-e1b46999><code data-v-e1b46999>Card.vue</code> → <code data-v-e1b46999>::card</code></li><li data-v-e1b46999><code data-v-e1b46999>FeatureCard.vue</code> → <code data-v-e1b46999>::feature-card</code></li><li data-v-e1b46999><code data-v-e1b46999>Alert.vue</code> → <code data-v-e1b46999>::alert</code></li></ul></div><div class="definition-card" data-v-e1b46999><h3 data-v-e1b46999>5️⃣ Props と Slots</h3><ul data-v-e1b46999><li data-v-e1b46999><strong data-v-e1b46999>Props</strong>: <code data-v-e1b46999>{prop=&quot;value&quot;}</code> の形式で渡す</li><li data-v-e1b46999><strong data-v-e1b46999>Slots</strong>: <code data-v-e1b46999>::component-name</code> と <code data-v-e1b46999>::</code> の間のコンテンツ</li><li data-v-e1b46999><strong data-v-e1b46999>自己閉じタグ</strong>: スロットなしの場合は <code data-v-e1b46999>::component-name{props}</code></li></ul></div><div class="flow-diagram" data-v-e1b46999><h3 data-v-e1b46999>📊 処理フロー</h3><div class="flow-steps" data-v-e1b46999><div class="flow-step" data-v-e1b46999><div class="step-number" data-v-e1b46999>1</div><div class="step-content" data-v-e1b46999><strong data-v-e1b46999>Markdown/YAML/JSON</strong><code data-v-e1b46999>::card{title=&quot;Hello&quot;}</code></div></div><div class="flow-arrow" data-v-e1b46999>→</div><div class="flow-step" data-v-e1b46999><div class="step-number" data-v-e1b46999>2</div><div class="step-content" data-v-e1b46999><strong data-v-e1b46999>remark解析</strong><span data-v-e1b46999>MDC構文をAST化</span></div></div><div class="flow-arrow" data-v-e1b46999>→</div><div class="flow-step" data-v-e1b46999><div class="step-number" data-v-e1b46999>3</div><div class="step-content" data-v-e1b46999><strong data-v-e1b46999>コンポーネントマッピング</strong><span data-v-e1b46999>Card.vueを検索</span></div></div><div class="flow-arrow" data-v-e1b46999>→</div><div class="flow-step" data-v-e1b46999><div class="step-number" data-v-e1b46999>4</div><div class="step-content" data-v-e1b46999><strong data-v-e1b46999>Vueレンダリング</strong><span data-v-e1b46999>propsとslotを渡す</span></div></div></div></div>`,4))])])}}}),h=p(w,[["__scopeId","data-v-e1b46999"]]);export{h as default};
